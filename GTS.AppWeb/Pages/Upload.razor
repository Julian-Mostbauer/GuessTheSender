@page "/upload"
@using GTS.Core
@inject GTS.AppWeb.Services.MessageService MessageService
@inject NavigationManager NavigationManager

@code {
    private string? _errorMessage = null;
    private bool _hasTriedLoading = false;
    private bool _isLoading = false;
    private readonly List<string> _bannedNames = ["Meta AI"];
    private string _newBannedName = string.Empty;

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        _hasTriedLoading = true;
        _isLoading = true;
        try
        {
            var file = e.File;
            await using var stream = file.OpenReadStream(maxAllowedSize: 1_024_000);
            using var reader = new StreamReader(stream);
            var content = await reader.ReadToEndAsync();
            var messageLoader = MessageLoader.FromContent(content, _bannedNames.ToArray());
            var messages = messageLoader.LoadMessages().ToArray();
            MessageService.SetMessages(messages);
            _errorMessage = null;
        }
        catch (IOException ioEx)
        {
            _errorMessage = $"File size exceeds limit: {ioEx.Message}";
            MessageService.SetMessages(null);
        }
        catch (Exception ex)
        {
            _errorMessage = $"Error loading messages: {ex.Message}";
            MessageService.SetMessages(null);
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void AddBannedName()
    {
        var trimmed = _newBannedName.Trim();
        if (!string.IsNullOrWhiteSpace(trimmed) && !_bannedNames.Contains(trimmed, StringComparer.OrdinalIgnoreCase))
        {
            _bannedNames.Add(trimmed);
            _newBannedName = string.Empty;
        }
    }

    private void RemoveBannedName(string name)
    {
        _bannedNames.Remove(name);
    }

    private void ClearMessages()
    {
        MessageService.ClearMessages();
        _hasTriedLoading = false;
    }

}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h2 class="card-title mb-4 text-center">Upload Your Messages</h2>
                    <p class="text-muted text-center">Select the text file containing your messages to get started. You
                        can find the official guide to generate the messages text file <a
                            href="https://faq.whatsapp.com/1180414079177245/?cms_platform=android&cms_id=1180414079177245&draft=false">here</a>.
                        You can also set banned names, to ignore messages from certain
                        users.</p>
                    <div class="mb-3">
                        <label class="form-label">Banned Names</label>
                        <div class="input-group mb-2">
                            <input class="form-control" @bind="_newBannedName" @bind:event="oninput"
                                   placeholder="Add a banned name..."/>
                            <button class="btn btn-outline-secondary" type="button" @onclick="AddBannedName">Add
                            </button>
                        </div>
                        <ul class="list-group">
                            @foreach (var name in _bannedNames)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <span>@name</span>
                                    <button class="btn btn-sm btn-danger" type="button"
                                            @onclick="() => RemoveBannedName(name)"
                                            disabled="@("Meta AI".Equals(name, StringComparison.OrdinalIgnoreCase))">
                                        Remove
                                    </button>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="mb-3 text-center">
                        <InputFile class="form-control" OnChange="OnInputFileChange"/>
                    </div>
                    <button class="btn btn-outline-danger mb-3 w-100" @onclick="ClearMessages"
                            disabled="@(MessageService.Messages == null)" style="display:none;">Clear All Messages
                    </button>
                    <div class="mt-4">
                        @if (MessageService.Messages is { Length: > 0 })
                        {
                            <div class="alert alert-success d-flex justify-content-between align-items-center">
                                <div>
                                    <strong>Success!</strong> @MessageService.Messages.Length messages have been loaded.
                                </div>
                                <button class="btn btn-sm btn-outline-danger ms-3" @onclick="ClearMessages"
                                        title="Clear All Messages">
                                    <i class="bi bi-trash"></i> Clear
                                </button>
                            </div>
                        }
                        else if (_isLoading)
                        {
                            <div class="alert alert-info text-center">
                                <span class="spinner-border spinner-border-sm me-2"></span>Loading messages, please
                                wait...
                            </div>
                        }
                        else if (!_hasTriedLoading)
                        {
                            <div class="alert alert-secondary text-center">
                                No messages have been loaded yet. Please upload a file to begin.
                            </div>
                        }
                        else if (MessageService.Messages == null)
                        {
                            <div class="alert alert-danger text-center">
                                <strong>Failed to load messages.</strong><br/>
                                <span>@(_errorMessage ?? "An unknown error occurred. Please try again.")</span>
                            </div>
                        }
                        else if (MessageService.Messages.Length == 0)
                        {
                            <div class="alert alert-warning text-center">
                                The file was loaded, but no messages were found.
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

