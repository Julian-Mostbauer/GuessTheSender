@page "/upload"
@using GTS.Core
@inject GTS.AppWeb.Services.MessageService MessageService
@inject NavigationManager NavigationManager

@code {
    private string? errorMessage = null;
    private bool hasTriedLoading = false;
    private bool isLoading = false;

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        hasTriedLoading = true;
        isLoading = true;
        try
        {
            var file = e.File;
            await using var stream = file.OpenReadStream(maxAllowedSize: 1_024_000);
            using var reader = new StreamReader(stream);
            var content = await reader.ReadToEndAsync();
            var messageLoader = MessageLoader.FromContent(content);
            var messages = messageLoader.LoadMessages().ToArray();
            MessageService.SetMessages(messages);
            errorMessage = null;
        }
        catch (IOException ioEx)
        {
            errorMessage = $"File size exceeds limit: {ioEx.Message}";
            MessageService.SetMessages(null);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading messages: {ex.Message}";
            MessageService.SetMessages(null);
        }
        finally
        {
            isLoading = false;
        }
    }

}

<h3>Upload Messages</h3>

<InputFile OnChange="OnInputFileChange"/>
<div style="border: 2px solid #ccc; padding: 10px; margin-top: 10px;">
    @if (MessageService.Messages is { Length: > 0 })
    {
        <p>Currently there are @MessageService.Messages.Length Messages loaded</p>
    }
    else if (isLoading)
    {
        <p>Loading messages...</p>
    }
    else if (!hasTriedLoading)
    {
        <p>No messages loaded yet.</p>
    }
    else if (MessageService.Messages == null)
    {
        <p>Failed to load messages:</p>
        <p>@(errorMessage ?? "No error specified")</p>
    }
    else if (MessageService.Messages.Length == 0)
    {
        <p>No messages loaded.</p>
    }
</div>
